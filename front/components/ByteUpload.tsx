import axios from "axios";
import { useState } from "react";
import { useDispatch } from "react-redux";
import { FILE_SEND_REQUEST, RESET_REQUEST } from "reducers/file";
import styles from "../styles/byteUpload.module.scss";

const ByteUpload = ({ setByteFile }) => {
  const dispatch = useDispatch();
  const [inputbyteFile, setInputByteFile] = useState<File>(null);

  const onChangeFileUpload = (e) => {
    if (e.target.files) {
      dispatch({
        type: RESET_REQUEST,
      });
      const file = e.target.files[0];
      const fileReader: FileReader = new FileReader();
      setInputByteFile(file);
      setByteFile(file);
      console.log(file);
      console.log(file.name);
    }
  };
  const onClikcFileSend = () => {
    dispatch({
      type: FILE_SEND_REQUEST,
      data: { file: inputbyteFile, fileName: inputbyteFile.name },
    });
    // axios.defaults.baseURL = process.env.NEXT_PUBLIC_API_BASE_URL;

    // axios.post(`/uploader`, { file: inputbyteFile }).then(() => {
    //   alert(Response);
    // });
  };
  return (
    <div className={styles.byte_upload_wrapper}>
      <div className={styles.file_load_button}>
        <input type="file" id="fileupload" multiple={false} onChange={onChangeFileUpload} />
        <label htmlFor="fileupload">파일 불러오기</label>
        {/* {inputbyteFile && <span>byte file : {inputbyteFile.name}</span>} */}
      </div>
      {inputbyteFile && (
        <div className={styles.file_send_button} onClick={onClikcFileSend}>
          <span>{inputbyteFile && inputbyteFile.name} </span>
          <span>서버전송하기</span>
        </div>
      )}
    </div>
  );
};

export default ByteUpload;
