import '../utils/string.extensions';
export declare class _Disassembler {
    private prefixMap;
    private opCodeTable;
    private position;
    private byteIterator;
    generateInstructions(code: string): Instruction[];
    private getInstruction;
    private operationIsJump;
    private fetchPrefix;
    private checkRegister;
    private processOperand;
    private nextByteXtimes;
    private processM;
    private getPointer;
    private processAddressMode;
    private processSIB;
    private processDisp;
    private processImm;
    private isNegative;
    private processJump;
}
export declare type pointerType = 'b' | 'd' | 'w';
interface operand {
    value?: string;
    register?: string;
    register2?: string;
    displacement?: string;
    constant?: string;
    pointer?: pointerType;
}
export interface Instruction {
    instruction: string;
    operand1?: operand;
    operand2?: operand;
    position?: number;
}
export {};
