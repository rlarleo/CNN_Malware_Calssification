# import bytesToImages
# import cnn_model
# import set_Label
# import classification_folder
import grad_cam
import read_coordinate_heatmap

if __name__ == "__main__":
    # bytes_to_images.convert_to_images("malware", "images") # 바이너리를 이미지로 변환
    # set_Label.set_label()  # csv 파일을 train, test로 나눔
    # classification_folder.classification_folder() # 1~9 폴더로 나눔
    # model = cnn_model.cnn()
    # cam = grad_cam.CAM(model)

    # bytesFilename, imageFilename = bytes_to_images.convert_to_images("UpLoadMalware2/malwareTest2", "UpLoadMalware2/imagesTest2")
    # grad_cam.run_grad_cam(imageFilename)
    # read_coordinate_heatmap.heatmap_coordinate(bytesFilename)
    # convertBytes.convert_to_Bytes("malwareTest", "malwareTest2")
    # bytes_to_images.convert_to_images("malwareTest2", "imagesTest2") # 바이너리를 이미지로 변환

    # bytesToImages.convert_to_images("malware", "imagesV2")
    # set_Label.set_label()  # csv 파일을 train, test로 나눔
    # classification_folder.classification_folder() # 1~9 폴더로 나눔
    # cnn_model.cnn()
    # bytesFilename, imageFilename = bytes_to_images.convert_to_images("UpLoadMalware2/malwareTest2", "UpLoadMalware2/imagesTest2")
    grad_cam.run_grad_cam("UpLoadMalware/Image/malware/4HGxlXJ8Ncy2Ri5az3o7.bytes.jpg")
    read_coordinate_heatmap.heatmap_coordinate("UpLoadMalware/Image/4HGxlXJ8Ncy2Ri5az3o7.bytes")

    print("hello")

